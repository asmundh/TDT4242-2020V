image: python:3

stages:
  - build
  - test
  - deploy

test:
  stage: test
  script:
    # this configures Django application to use attached postgres database that is run on `postgres` host
    - apt-get update -qy
    - pip install -r requirements.txt
    - coverage run manage.py test

e2e-setup:
  stage: test
  script:
    - pip install -r requirements.txt
    - apt-get update -qy
    - apt-get install -y npm nodejs xvfb libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth 
    - node -v
    - npm -v
    - npm install
    - python manage.py migrate --fake-initial
    - python3 manage.py loaddata seed.json
    - python manage.py runserver &
    - sleep 3
    - curl http://127.0.0.1:8000/
    - npx cypress run --config video=false

staging:
  type: deploy
  stage: deploy
  image: ruby
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app='tdt4242-t26' --api-key=$HEROKU_STAGING_API_KEY
  only:
    - "master"
#https://docs.gitlab.com/ee/ci/examples/test-and-deploy-python-application-to-heroku.html
